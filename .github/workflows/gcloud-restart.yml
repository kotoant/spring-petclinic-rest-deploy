name: Restart deployment
run-name: "Restart [mode: ${{ inputs.mode }}${{ inputs.mode == 'environment' && format(', {0}, {1}', inputs.server, inputs.profile) || '' }}${{ inputs.dryRun && ', dry-run' || '' }}]"

on:
  workflow_dispatch:
    inputs:
      mode:
        description: 'mode'
        required: true
        default: 'scale'
        type: choice
        options:
          - scale
          - rollout
          - environment
          - delete
          - scale to zero
      server:
        description: 'server'
        required: true
        default: 'tomcat'
        type: choice
        options:
          - jetty
          - netty
          - tomcat
          - undertow
      profile:
        description: 'profile'
        required: true
        default: 'webmvc-jdbc'
        type: choice
        options:
          - webmvc-jdbc
          - webmvc-jdbc-loom
          - webflux-jdbc-reactive
          - webflux-jdbc-loom
          - webflux-jdbc-coroutine
          - webflux-r2dbc-reactive
          - webflux-r2dbc-coroutine
      dryRun:
        description: 'dry-run'
        required: true
        default: false
        type: boolean

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - name: Before
        run: >
          echo "### Inputs:" >> $GITHUB_STEP_SUMMARY;
          echo "${{ toJSON(inputs) }}" >> $GITHUB_STEP_SUMMARY;
          echo "DRY_RUN=${{ inputs.dryRun }}" >> $GITHUB_ENV;

      - name: Checkout
        uses: actions/checkout@v3

      - id: auth
        name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v1
        with:
          version: '422.0.0'

      - name: Install gke-gcloud-auth-plugin
        run: >
          gcloud components install gke-gcloud-auth-plugin --quiet

      - name: Connect to GKE
        run: >
          source ./.github/scripts/.common.before_script.sh;
          run gcloud container clusters get-credentials autopilot-cluster-1 --region europe-north1 --project kotoant;

      - name: Scale to 1
        if: ${{ inputs.mode == 'scale' }}
        run: >
          source ./.github/scripts/.common.before_script.sh;
          run kubectl scale deployment spring-petclinic-rest --replicas=0;
          run kubectl scale deployment spring-petclinic-rest --replicas=1;

      - name: Rollout restart
        if: ${{ inputs.mode == 'rollout' }}
        run: >
          source ./.github/scripts/.common.before_script.sh;
          run kubectl rollout restart deployment spring-petclinic-rest --timeout=300s;

      - name: Set env deployment
        if: ${{ inputs.mode == 'environment' }}
        run: >
          source ./.github/scripts/.common.before_script.sh;
          run kubectl set env deployment spring-petclinic-rest SERVER=${{ inputs.server }} PROFILE=${{ inputs.profile }};

      - name: Delete pods
        if: ${{ inputs.mode == 'delete' }}
        run: >
          source ./.github/scripts/.common.before_script.sh;
          run kubectl delete pods -l app.kubernetes.io/name=spring-petclinic-rest;

      - name: Scale to 0
        if: ${{ inputs.mode == 'scale to zero' }}
        run: >
          source ./.github/scripts/.common.before_script.sh;
          run kubectl scale deployment spring-petclinic-rest --replicas=0;
