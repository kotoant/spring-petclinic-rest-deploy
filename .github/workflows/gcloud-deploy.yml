name: Deploy to Google Kubernetes Engine (GKE) Autopilot
run-name: "Deploy [version: ${{ inputs.version }}${{ inputs.version == 'latest' && inputs.release == 'release' && ' release' || '' }}, ${{ inputs.server }}, ${{ inputs.profile }}, dry-run: ${{ inputs.dryRun }}]"

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'version'
        required: true
        default: 'latest'
        type: string
      release:
        description: 'release'
        required: true
        default: true
        type: boolean
      server:
        description: 'server'
        required: true
        default: 'tomcat'
        type: choice
        options:
          - jetty
          - netty
          - tomcat
          - undertow
      profile:
        description: 'profile'
        required: true
        default: 'webmvc-jdbc'
        type: choice
        options:
          - webmvc-jdbc
          - webmvc-jdbc-loom
          - webflux-jdbc-reactive
          - webflux-jdbc-loom
          - webflux-jdbc-coroutine
          - webflux-r2dbc-reactive
          - webflux-r2dbc-coroutine
      dryRun:
        description: 'dry-run'
        required: true
        default: false
        type: boolean

env:
  VERSION_REGEXP: '^latest$|^[0-9]+\.[0-9]+\.[0-9]+$'

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - name: 'Check version'
        run: >
          echo "DRY_RUN=${{ inputs.dryRun }}" >> $GITHUB_ENV;
          if [[ ${{ inputs.release }} != "true" && ${{ inputs.version }} != "latest" ]]; then
            echo "::error ::release=false mode supports only latest version [version: ${{ inputs.version }}]";
            exit 1;
          fi;
          if [[ ! ${{ inputs.version }} =~ $VERSION_REGEXP ]]; then
            echo "::error ::version doesn't match regexp [version: ${{ inputs.version }}, regexp: $VERSION_REGEXP]";
            exit 1;
          fi;

      - name: 'Check version tag'
        if: ${{ inputs.version != 'latest' }}
        uses: oprypin/find-latest-tag@v1
        with:
          repository: kotoant/spring-petclinic-rest
          regex: '^v${{ inputs.version }}$'

      - name: 'Find latest tag'
        if: ${{ inputs.release == 'true' && inputs.version == 'latest' }}
        uses: oprypin/find-latest-tag@v1
        with:
          repository: kotoant/spring-petclinic-rest
          regex: '^v\d+\.\d+\.\d+$'
        id: find_latest_tag

      - name: 'Calculate version'
        run: >
          if [[ ${{ inputs.release }} == "true" && ${{ inputs.version }} == "latest" ]]; then
            latestTag=${{ steps.find_latest_tag.outputs.tag }};
            echo "VERSION=$(echo ${latestTag#"v"})" >> $GITHUB_ENV;
          else
            echo "VERSION=${{ inputs.version }}" >> $GITHUB_ENV;
          fi;

      - name: 'Print version'
        run: >
          echo "::notice ::Deploy version: $VERSION"

      - id: 'auth'
        name: 'Authenticate to Google Cloud'
        uses: 'google-github-actions/auth@v1'
        with:
          credentials_json: '${{ secrets.GCP_SA_KEY }}'

      - name: 'Set up Cloud SDK'
        uses: 'google-github-actions/setup-gcloud@v1'
        with:
          version: '422.0.0'

      - name: 'Set up Helm'
        uses: azure/setup-helm@v3
        with:
          version: '3.11.2'

      - name: 'Install gke-gcloud-auth-plugin'
        run: >
          gcloud components install gke-gcloud-auth-plugin --quiet

      - name: 'Connect to GKE'
        run: >
          gcloud container clusters get-credentials autopilot-cluster-1 --region europe-north1 --project kotoant

      - name: Checkout
        uses: 'actions/checkout@v3'

      - name: 'Deploy'
        run: >
          source ./.github/scripts/.common.before_script.sh;
          run helm upgrade spring-petclinic-rest
          --set appVersion=$VERSION
          --set server=${{ inputs.server }}
          --set profile=${{ inputs.profile }}
          ./spring-petclinic-rest --atomic --install --timeout 5m --wait
