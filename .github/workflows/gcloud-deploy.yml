name: Deploy to Google Kubernetes Engine (GKE) Autopilot

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'version'
        required: false
        default: 'latest'
        type: string
      server:
        description: 'server'
        required: true
        default: 'tomcat'
        type: choice
        options:
          - jetty
          - netty
          - tomcat
          - undertow
      profile:
        description: 'profile'
        required: true
        default: 'webmvc-jdbc'
        type: choice
        options:
          - webmvc-jdbc
          - webmvc-jdbc-loom
          - webflux-jdbc-reactive
          - webflux-jdbc-loom
          - webflux-jdbc-coroutine
          - webflux-r2dbc-reactive
          - webflux-r2dbc-coroutine

env:
  VERSION_REGEXP: '^$|^latest$|^v[0-9]+\.[0-9]+\.[0-9]+$'

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - name: 'Check version'
        run: >
          if [[ ! ${{ inputs.version }} =~ $VERSION_REGEXP ]]; then echo "::error ::version should match regular
          expression [version: ${{ inputs.version }}, regexp: $VERSION_REGEXP]"; exit 1; fi

#      - uses: 'actions/checkout@v3'
#
#      - id: 'auth'
#        name: 'Authenticate to Google Cloud'
#        uses: 'google-github-actions/auth@v1'
#        with:
#          credentials_json: '${{ secrets.GCP_SA_KEY }}'
#
#      - name: 'Set up Cloud SDK'
#        uses: 'google-github-actions/setup-gcloud@v1'
#        with:
#          version: '422.0.0'
#
#      - name: 'Set up Helm'
#        uses: azure/setup-helm@v3
#        with:
#          version: '3.11.2'
#
#      - name: 'Install gke-gcloud-auth-plugin'
#        run: >
#          gcloud components install gke-gcloud-auth-plugin --quiet
#
#      - name: 'Connect to GKE'
#        run: >
#          gcloud container clusters get-credentials autopilot-cluster-1 --region europe-north1 --project kotoant
#
#      - name: 'Deploy'
#        run: >
#          helm upgrade spring-petclinic-rest
#          --set appVersion=${{ inputs.version }}
#          --set server=${{ inputs.server }}
#          --set profile=${{ inputs.profile }}
#          ./spring-petclinic-rest --atomic --install --timeout 5m --wait
